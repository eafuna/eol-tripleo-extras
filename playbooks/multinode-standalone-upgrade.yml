---
# Opening up repo-setup as cached variables can cause issue, see
# https://bugs.launchpad.net/tripleo/+bug/1795367
- name: Standalone upgrade repos setup and host upgrade
  hosts: undercloud
  tasks:

    - name: Standalone upgrade get new dlrn hash.
      include_role:
        name: repo-setup
        tasks_from: get-dlrn-hash

    - name: Standalone upgrade get new dlrn hash.
      include_role:
        name: repo-setup
        tasks_from: get-dlrn-hash-newest

    - name: Standalone upgrade generate new dlrn repo-setup script.
      include_role:
        name: repo-setup
        tasks_from: create-repo-script
      vars:
        repo_setup_script: repo_setup_upgrade.sh
        repo_setup_run_update: false
        # when yum_config_module is enabled
        repo_cmd_before_setup_script: repo_cmd_before_setup_upgrade.sh
        repo_setup_new_script: repo_setup_upgrade_new.sh
        repo_cmd_after_setup_script: repo_cmd_after_setup_upgrade.sh

    # The next task triggers the yum upgrade command in as
    # repo_setup_run_update is true in release files by default.
    - name: Standalone upgrade setup new repos
      include_role:
        name: repo-setup
        tasks_from: setup_repos
      vars:
        repo_setup_log: repo_setup_upgrade.log
        repo_setup_script: repo_setup_upgrade.sh
      when: not use_yum_config_module|default(false)|bool

    # Run setup_repos_new tasks when using yum_config_module
    - name: Standalone upgrade setup new repos using yum-config module
      include_role:
        name: repo-setup
        tasks_from: setup_repos_new
      vars:
        repo_setup_log: repo_setup_upgrade.log
        repo_cmd_before_setup_script: repo_cmd_before_setup_upgrade.sh
        repo_setup_new_script: repo_setup_upgrade_new.sh
        repo_cmd_after_setup_script: repo_cmd_after_setup_upgrade.sh
      when: use_yum_config_module|default(false)|bool

    - name: Check and enable the component-ci-testing repo if present
      become: true
      when: job.component is defined
      block:
        - name: Stat for the component-ci-testing repo file
          stat:
            path: "/etc/yum.repos.d/{{ job.component }}-component.repo"
          register: component_repo
        - name: Enable the component-ci-testing repo if we have one
          ini_file:
            path: "/etc/yum.repos.d/{{ job.component }}-component.repo"
            option: enabled
            value: '1'
            section: "{{ job.component }}"
            no_extra_spaces: true
          when:
            - component_repo.stat.isreg is defined
            - component_repo.stat.isreg

  tags:
    - standalone-upgrade

# This is what is gating the patch in the N version in a N-1->N
# upgrade.
- name: Standalone upgrade runs DLRN gate role and install repo
  hosts: undercloud
  vars:
    artg_compressed_gating_repo: "/home/{{ undercloud_user }}/gating_repo.tar.gz"
    # This should not be enabled because the updating of the packages occurs
    # durring the upgrade process. For general installation it's ok to have
    # this enabled, but this needs to be disabled for upgrades
    ib_gating_repo_update: false
  roles:
    - build-test-packages
    - {role: install-built-repo, when: compressed_gating_repo is defined}
  tags:
    - build

# NOTE(aschultz): nested virt causes problems in CI so we default to qemu
# and do not do the dynamic virt lookup.
- name: Standalone Upgrade
  hosts: undercloud
  vars:
    standalone_libvirt_type: "{{ standalone_virt_type|default('qemu') }}"
  roles:
    - standalone-upgrade
  tags:
    - standalone-upgrade

# Remove me when os_tempest tempest init gets fixed
- name: Tempest workspace workaround
  hosts: undercloud
  tasks:
    - name: Nuke tempest workspace
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ ansible_user_dir }}/tempest"
        - "{{ ansible_user_dir }}/.tempest"
      ignore_errors: true

- name: Validate the Standalone upgrade
  hosts: undercloud
  # Note(chkumar246): Moved the os_tempest related var at the top
  # of play level in order to have scope for the whole of the play
  # https://bugs.launchpad.net/tripleo/+bug/1838496
  vars:
    tempest_install_method: distro
    tempest_cloud_name: 'standalone'
    tempest_cidr: '192.168.24.0/24'
  tasks:
    - include_tasks: tasks/tempest.yml
      when: use_os_tempest | default(true)
  environment:
    # Disable ssl warnings
    CURL_CA_BUNDLE: ""
  tags:
    - standalone-upgrade
