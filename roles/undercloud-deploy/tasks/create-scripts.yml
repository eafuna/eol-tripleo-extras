---
# Creat the scripts that will be used to deploy the undercloud
# environment.
- name: Check the dns information provided by the virthost
  shell: >
    awk 'match($0, /nameserver\s+(([0-9]{1,3}.?){4})/,address){ print address[1] }' /etc/resolv.conf
  delegate_to: virthost
  register: virthost_nameservers_output
  when: nameserver_from_virthost|bool

- name: set name server facts
  set_fact:
    virthost_nameservers: "{{ virthost_nameservers_output.stdout_lines }}"
  when: nameserver_from_virthost|bool

- name: Add custom rules needed in CI infra after switch to nftables.
  when: release not in ['train', 'wallaby']
  block:
    - name: Find the default network on the undercloud node
      set_fact:
        source_ci_ip_address: "{{ ansible_default_ipv4.address }}/{{ ansible_default_ipv4.netmask }}"

    - name: Convert to obtain the network address in CIDR notation format.
      set_fact:
        source_ci_network: "{{ source_ci_ip_address | ipaddr('network/prefix') }}"

    - name: Set undercloud firewall rule as plain text first
      vars:
        ips: "{{ ((hostvars | json_query('*.ansible_host') |list) +
              ansible_facts['all_ipv4_addresses'] +
              ansible_facts['all_ipv6_addresses'] +
              [source_ci_network]) | unique | ipaddr }}"
      set_fact:
        uc_firewall_rules: |
          '022 Allow CI console stream from CI network {{ source_ci_network }}':
            proto: 'tcp'
            dport: 19885
            source: "{{ source_ci_network }}"
            state: []
          {% for ip in ips %}
          '020 Allow VXLan from {{ ip }}':
            proto: "udp"
            dport: 4789
            source: "{{ ip }}"
            state: []
          '021 Allow OTV for vxlan from {{ ip }}':
            proto: 'udp'
            dport: 8472
            source: "{{ ip }}"
            state: []
          {% endfor %}
    - name: Set undercloud_network_environment_args to add custom CI rules for VXLAN, console Streaming and ssh accesses
      set_fact:
        undercloud_network_environment_args:
          ExtraFirewallRules: "{{ uc_firewall_rules | from_yaml }}"
          SshFirewallAllowAll: true

- when: undercloud_hieradata_override_file is defined
  block:
    - name: deprecation message
      vars:
        deprecation_warning_msg: |
             WARNING: The variable undercloud_hieradata_override_file
             is deprecated for removal since Pike.
             Reason: Both the undercloud and overcloud can use
             hieradata overrides and we must distinguish between the two.
             The variable will be removed in the "R" release.
             Please revise your code to use the new variable,
             and file name.

      debug:
        msg: "{{ deprecation_warning_msg.split('\n') }}"

    - name: Create the deprecated undercloud hieradata overrides
      template:
        src: "{{ undercloud_hieradata_override_file }}"
        dest: "./hieradata-overrides-classic-undercloud.yaml"
        mode: 0600

- name: Create t-h-t driven undercloud hieradata overrides
  block:
    - name: Generate undercloud hieradata overrides file from template
      template:
        src: "{{ hieradata_override_file_t_h_t_undercloud }}"
        dest: "./hieradata-overrides-t-h-t-undercloud.yaml"
        mode: 0600

    - name: Set fact for undercloud hieradata overrides file
      set_fact:
        undercloud_hieradata_override: "./hieradata-overrides-t-h-t-undercloud.yaml"

- name: Create undercloud configuration
  template:
    src: "{{ undercloud_config_file }}"
    dest: "./undercloud.conf"
    mode: 0600

- name: Prepare undercloud custom t-h-t branch/refspec
  include_role:
    name: tht-prep-config
  vars:
    custom_tht_log: "{{ undercloud_custom_tht_log }}"
    custom_tht_script: "{{ undercloud_custom_tht_script }}"
    tht_templates_repo: "{{ undercloud_templates_repo|default('') }}"
    tht_templates_refspec: "{{ undercloud_templates_refspec|default('') }}"
    tht_templates_branch: "{{ undercloud_templates_branch|default('') }}"
    tht_templates_path: "{{ undercloud_templates_path }}"
    composable_scenario: "{{ undercloud_composable_scenario }}"
    upgrade_composable_scenario: "{{ undercloud_upgrade_composable_scenario }}"
    prep_post_hook_script: "{{ undercloud_prep_post_hook_script }}"
    download_templates_rpm: "{{ download_undercloud_templates_rpm }}"
    tht_rpm_url: "{{ undercloud_tht_rpm_url }}"
  when:
    - undercloud_templates_branch is defined or undercloud_templates_refspec is defined
    - undercloud_templates_repo is defined
    - undercloud_templates_path is defined

- name: Create the undercloud parameter defaults file.
  template:
    src: undercloud-parameter-defaults.yaml.j2
    dest: "{{ working_dir }}/undercloud-parameter-defaults.yaml"
    mode: 0600

- name: Set update_containers_repo if delorean-current is not present
  stat:
    path: "/etc/yum.repos.d/delorean-current.repo"
  register: delorean_current_stat

- name: Remove delorean-current from repo updates
  set_fact:
    update_containers_repo: >-
      {% if compressed_gating_repo is defined %}{{ gating_repo_name }}{% endif %}
      {%- if compressed_gating_repo is defined and container_prep_additional_repos -%},{%- endif -%}
      {%- if container_prep_additional_repos -%}{{ container_prep_additional_repos }}{%- endif -%}
  when: not delorean_current_stat.stat.exists

- name: Set repos defined in the job for container update
  when:
    - job.add_repos is defined
    - job.add_repos != []
  block:
    - name: Create string of repos to update
      set_fact:
        add_repo_update_list: >-
          {% if job.add_repos[item|int].update_container|default(false) -%}
          {{ job.add_repos[item|int].reponame }}
          {% endif -%}
      with_sequence: start=0 end="{{ (job.add_repos|length -1)|int }}"
      register: add_repo_update_list_result

    - debug:
        var: add_repo_update_list

    - name: Add repos to update_repo
      set_fact:
        add_repos_update: "{{ add_repo_update_list_result.results | map(attribute='ansible_facts.add_repo_update_list') | list }}"
        cacheable: true
      when: add_repo_update_list_result|length > 0

    - debug:
        var: add_repos_update

    - name: Create string from list
      set_fact:
        add_repos_update:
          "{% if update_containers_repo|length >0 %},{% endif %}{{ add_repos_update | join(',') }}"
      when: add_repos_update|length > 0

    - name: Create string from list
      set_fact:
        update_containers_repo: "{{ update_containers_repo }}{{ add_repos_update }}"
      when: add_repos_update|length > 0

- name: Create containers-prepare-parameter.yaml
  when: registry_distro_lower is not defined
  block:
    - name: Write containers-prepare-parameter.yaml
      template:
        src: containers-prepare-parameter.yaml.j2
        dest: "{{ working_dir }}/containers-prepare-parameter.yaml"

- name: Create containers-prepare-parameter.yaml
  when: registry_distro_lower is defined
  block:
    - name: Write containers-prepare-parameter.yaml
      template:
        src: containers-prepare-parameter-mixed-os.yaml.j2
        dest: "{{ working_dir }}/containers-prepare-parameter.yaml"
