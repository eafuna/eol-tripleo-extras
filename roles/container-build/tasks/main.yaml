---
# Copyright 2020 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Deploy the content provider registry
  block:
    - name: 'Deploy the content provider registry from {{ container_registry_image }}'
      become: true
      shell: >-
        podman run
        -d
        --network=host
        --name docker_registry
        -e REGISTRY_HTTP_ADDR="0.0.0.0:{{ content_provider_registry_port }}"
        -e REGISTRY_LOG_LEVEL=debug
        {{ container_registry_image }}
      tags:
        - skip_ansible_lint
  rescue:
    - name: "Deploy the content provider registry from {{ container_registry_image_fallback }}"
      become: true
      shell: >-
        podman run
        -d
        --network=host
        --name docker_registry
        -e REGISTRY_HTTP_ADDR="0.0.0.0:{{ content_provider_registry_port }}"
        -e REGISTRY_LOG_LEVEL=debug
        {{ container_registry_image_fallback }}
      tags:
        - skip_ansible_lint

- name: Open port for content provider registry
  become: true
  command: >-
    iptables -I INPUT -p tcp --dport {{ content_provider_registry_port }} -j ACCEPT
  changed_when: true

- name: Set container_image_build_volumes fact
  set_fact:
    container_image_build_volumes:
      - "/etc/yum.repos.d:/etc/distro.repos.d:z"
      - "/etc/pki/rpm-gpg:/etc/pki/rpm-gpg:z"
      - "/etc/pki/ca-trust:/etc/pki/ca-trust:z"
  when:
    - (ansible_distribution == 'RedHat') or (ansible_distribution_major_version|int < 8)

- name: Set container_image_build_volumes fact for CentOS
  set_fact:
    container_image_build_volumes:
      - "/etc/yum.repos.d:/etc/distro.repos.d:z"
      - "/etc/pki/rpm-gpg:/etc/pki/rpm-gpg:z"
      - "/etc/dnf/vars:/etc/dnf/vars:z"
  when:
    - ansible_distribution == 'CentOS'
    - ansible_distribution_major_version|int >= 8

- name: Check if /opt/gating_repo exists
  stat:
    path: /opt/gating_repo
  register: gating_stat

- name: Add gating repo to mount volumes if exists
  set_fact:
    container_image_build_volumes:
      '{{ container_image_build_volumes + ["/opt/gating_repo:/opt/gating_repo:z"] }}'
  when: gating_stat.stat.exists|bool

- name: Include exclude_containers and ci_branch from build-containers role
  when: zuul is defined
  block:

    - name: Include vars from build-containers to include exclude_containers
      include_vars: "{{ ansible_user_dir }}/{{ zuul.projects['opendev.org/openstack/tripleo-ci'].src_dir }}/roles/build-containers/vars/main.yaml"

    - name: Set ci_branch for building containers check jobs
      include_tasks: "{{ ansible_user_dir }}/{{ zuul.projects['opendev.org/openstack/tripleo-ci'].src_dir }}/roles/build-containers/tasks/set_ci_branch.yml"

    - name: Set branch
      set_fact:
        branch: "{{ osp_release | default(ci_branch) }}"

- name: Add tcib_extra params
  set_fact:
    tcib_extras:
      - "tcib_release={{ ansible_distribution_major_version }}"
      - "tcib_python_version={{ (ansible_distribution_major_version|int < 9) | ternary ('3.6', '3.9') }}"
  when: release not in ['train', 'ussuri', 'victoria']

- name: Add tcib extra config params
  when:
    - container_extra_config is defined
    - release not in ['train', 'wallaby']
  block:
    - name: Generate config params
      copy:
        dest: "{{ ansible_user_dir }}/extra_config.yaml"
        content: |
          {{ container_extra_config | to_nice_yaml }}

    - name: Set tcib config params
      set_fact:
        tcib_extra_config: "{{ ansible_user_dir }}/extra_config.yaml"


- name: Build and push container images to the local registry
  collections:
    - tripleo.operator
  include_role:
    name: tripleo_container_image_build
  vars:
    # TODO(tkajinam): With Ansible 2.14, the playbook triggered by the command
    #                 gets stuck if -vvv is set. We temporarily remove --debug
    #                 as a workaround until we find out the appropriate fix.
    #                 https://github.com/ansible/ansible-runner/issues/1164
    # tripleo_container_image_build_debug: true
    tripleo_container_image_build_generate_scripts: true
    tripleo_container_image_build_namespace: "{{ container_registry_namespace }}"
    tripleo_container_image_build_tag: "{{ container_tag }}"
    tripleo_container_image_build_push: true
    tripleo_container_image_build_registry: "{{ content_provider_registry_ip }}:{{ content_provider_registry_port }}"
    tripleo_container_image_build_rhel_modules: "{{ rhel_modules|default('') }}"
    tripleo_container_image_build_volumes: "{{ container_image_build_volumes }}"
    tripleo_container_image_build_work_dir: "{{ working_dir }}/container-builds"
    tripleo_container_image_build_prefix: "{{ docker_prep_prefix }}"
    tripleo_container_image_build_timeout: 10000
    tripleo_container_image_build_base: "{{ containers_base_image }}"
    tripleo_container_image_build_excludes: "{{ exclude_containers[branch][container_exclude_distro]|default([]) }}"
    tripleo_container_image_build_tcib_extras: "{{ tcib_extras | default([]) }}"
    tripleo_container_image_build_extra_config: "{{ tcib_extra_config | default('') }}"
    tripleo_container_image_build_distro: "{{ (ansible_distribution == 'RedHat') | ternary('rhel', 'centos') }}"

- name: Pull and push non *tripleo* container images to local registry
  import_tasks: non_tripleo_containers.yml
  when: job.provider_job|default(false)|bool
