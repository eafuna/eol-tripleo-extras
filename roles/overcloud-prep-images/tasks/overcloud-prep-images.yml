---
- name: Download overcloud image
  shell: >
    set -o pipefail &&
    {{ working_dir }}/download-overcloud-image.sh 2>&1 {{ timestamper_cmd }} >
    {{ download_overcloud_image_log }}
  changed_when: true
  when: download_overcloud_image|bool

- name: Upload Overcloud Images
  when: step_overcloud_image|bool
  block:
    - name: Run overcloud image upload via tripleo-operator-ansible
      collections:
        - tripleo.operator
      include_role:
        name: tripleo_overcloud_image_upload
      vars:
        tripleo_os_cloud: undercloud
        tripleo_overcloud_image_upload_debug: true
        tripleo_overcloud_image_upload_generate_scripts: true
        tripleo_overcloud_image_upload_http_boot: '/var/lib/ironic/httpboot'
        tripleo_overcloud_image_upload_whole_disk: "{{ whole_disk_images | default(false) | bool }}"
        tripleo_overcloud_image_upload_local: "{{ not undercloud_enable_nova | default(false)  |bool }}"
        tripleo_overcloud_image_upload_log: "{{ overcloud_image_upload_log }}"
        tripleo_overcloud_image_upload_log_combine: true

- name: Upload overcloud images with Glance for multinode
  shell: >
    set -o pipefail &&
    {{ working_dir }}/overcloud-glance-image-upload.sh 2>&1 {{ timestamper_cmd }} >
    {{ overcloud_glance_image_upload_log }}
  changed_when: true
  when: step_glance_upload|bool

- name: List overcloud flavors for Nova deployment
  shell: >
    set -o pipefail &&
    {{ working_dir }}/overcloud-list-flavors.sh 2>&1 {{ timestamper_cmd }} >
    {{ overcloud_list_flavors_log }}
  changed_when: true
  when: undercloud_enable_nova|bool

- name: Run import nodes
  when:
    - step_register|bool
  block:
    - name: Run import nodes via tripleo-operator-ansible
      collections:
        - tripleo.operator
      include_role:
        name: tripleo_overcloud_node_import
      vars:
        tripleo_overcloud_node_import_debug: true
        tripleo_os_cloud: undercloud
        tripleo_overcloud_node_import_provide: "{{ not step_introspect|bool and not step_introspect_with_retry|bool }}"
        tripleo_overcloud_node_import_log: "{{ overcloud_import_nodes_log }}"
        tripleo_overcloud_node_import_environment_file: instackenv.json

    - name: Wait until nodes will be manageable
      shell: >-
        set -o pipefail &&
        openstack --os-cloud undercloud baremetal node list -f value -c "Provisioning State" | grep -v -e manageable -e available
      register: result
      until: result.stdout == ''
      failed_when: result.rc == 0
      retries: 10
      delay: 30
      changed_when: false
      when: step_introspect|bool

- name: Set root device size
  shell: >
    set -o pipefail &&
    {{ working_dir }}/root-device-size.sh 2>&1 {{ timestamper_cmd }} >
    {{ root_device_size_log }}
  changed_when: true
  when: step_root_device_size|bool

- name: Set root device hints
  shell: >
    set -o pipefail &&
    {{ working_dir }}/root-device-hints.sh 2>&1 {{ timestamper_cmd }} >
    {{ root_device_hints_log }}
  changed_when: true
  when: step_root_device_hints|bool

- name: Run tcpdump during introspection in background
  become: true
  shell: >
    {{ ansible_pkg_mgr }} -y install tcpdump;
    tcpdump -U -i any port {{ step_introspect_debug_tcpdump_ports | join(' or port ') }}
    -w {{ step_introspect_debug_tcpdump_log }} > /dev/null &
  args:
    executable: /bin/bash
  async: 1
  poll: 0
  changed_when: false
  when:
    - step_introspect|bool
    - step_introspect_debug|bool

- name: Run Introspection
  when: step_introspect|bool
  block:
    - name: Run Introspection on overcloud nodes via tripleo-operator-ansible
      collections:
        - tripleo.operator
      include_role:
        name: tripleo_overcloud_node_introspect
      vars:
        tripleo_os_cloud: undercloud
        tripleo_overcloud_node_introspect_debug: true
        tripleo_overcloud_node_introspect_all_manageable: true
        tripleo_overcloud_node_introspect_provide: true
        tripleo_overcloud_node_introspect_log: "{{ overcloud_introspect_script_log }}"

- name: Stop tcpdump after introspection
  become: true
  command: pkill tcpdump
  changed_when: false
  failed_when: false

- name: Inject ARA into mistral executor container image
  shell: >
    set -o pipefail &&
    {{ working_dir }}/inject-ara.sh 2>&1 {{ timestamper_cmd }} >
    {{ inject_ara_log }}
  changed_when: true
  when:
    - undercloud_enable_mistral|bool
